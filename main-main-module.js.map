{"version":3,"sources":["webpack:///./node_modules/angular-progress-bar/fesm5/angular-progress-bar.js","webpack:///./src/app/main/main.module.ts","webpack:///./src/app/main/main.page.html","webpack:///./src/app/main/main.page.scss","webpack:///./src/app/main/main.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiC;AACkD;AACpC;;AAE/C;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mCAAmC,kBAAkB,EAAE;AACvD;AACA,oCAAoC,cAAc,EAAE;AACpD;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,2BAA2B,sDAAQ,wBAAwB,aAAa;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,4OAA4O,yBAAyB;AACrQ,yDAAyD,uBAAuB,4BAA4B,yBAAyB,sCAAsC,sCAAsC,wBAAwB,gCAAgC,+BAA+B,WAAW,2BAA2B,2BAA2B,gCAAgC,6BAA6B,yBAAyB,gCAAgC;AAC/d,iBAAiB;AACjB;AACA;AACA,uDAAuD,WAAW;AAClE;AACA,oBAAoB,OAAO,mDAAK,uBAAuB;AACvD,iBAAiB,OAAO,mDAAK,oBAAoB;AACjD,oBAAoB,OAAO,mDAAK,6BAA6B;AAC7D;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA,wBAAwB,4DAAY;AACpC;AACA;AACA;AACA,8BAA8B,oEAAsB;AACpD,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cA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","file":"main-main-module.js","sourcesContent":["import { __values } from 'tslib';\nimport { Component, Input, NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ProgressBarComponent = /** @class */ (function () {\r\n    function ProgressBarComponent() {\r\n        // Default color\r\n        this.color = \"#488aff\";\r\n    }\r\n    /**\r\n     * Returns a color for a certain percent\r\n     * @param percent The current progress\r\n     */\r\n    /**\r\n     * Returns a color for a certain percent\r\n     * @param {?} percent The current progress\r\n     * @return {?}\r\n     */\r\n    ProgressBarComponent.prototype.whichColor = /**\r\n     * Returns a color for a certain percent\r\n     * @param {?} percent The current progress\r\n     * @return {?}\r\n     */\r\n    function (percent) {\r\n        var e_1, _a;\r\n        // Get all entries index as an array\r\n        /** @type {?} */\r\n        var k = Object.keys(this.degraded);\r\n        // Convert string to number\r\n        k.forEach(function (e, i) { return k[i] = +e; });\r\n        // Sort them by value\r\n        k = k.sort(function (a, b) { return a - b; });\r\n        // Percent as number\r\n        /** @type {?} */\r\n        var p = +percent\r\n        // Set last by default as the first occurrence\r\n        ;\r\n        // Set last by default as the first occurrence\r\n        /** @type {?} */\r\n        var last = k[0];\r\n        try {\r\n            // Foreach keys \r\n            for (var k_1 = __values(k), k_1_1 = k_1.next(); !k_1_1.done; k_1_1 = k_1.next()) {\r\n                var val = k_1_1.value;\r\n                // if current val is < than percent\r\n                if (val < p) {\r\n                    last = val;\r\n                }\r\n                // if val >= percent then the val that we could show has been reached\r\n                else if (val >= p - 1) {\r\n                    return this.degraded[last];\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (k_1_1 && !k_1_1.done && (_a = k_1.return)) _a.call(k_1);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        // if its the last one return the last\r\n        return this.degraded[last];\r\n    };\r\n    /**\r\n     * @param {?} progress\r\n     * @return {?}\r\n     */\r\n    ProgressBarComponent.prototype.whichProgress = /**\r\n     * @param {?} progress\r\n     * @return {?}\r\n     */\r\n    function (progress) {\r\n        try {\r\n            return Math.round(+progress * 100) / 100;\r\n        }\r\n        catch (_a) {\r\n            return progress;\r\n        }\r\n    };\r\n    ProgressBarComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'progress-bar',\r\n                    template: \"\\n  <div class=\\\"progress-outer\\\">\\n    <div class=\\\"progress-inner\\\" [style.width]=\\\"whichProgress(progress) + '%'\\\" [style.background-color]=\\\"degraded == null ? color : whichColor(progress)\\\">\\n      {{whichProgress(progress)}}%\\n    </div>\\n  </div>\\n  \",\r\n                    styles: [\"\\n        .progress-outer {\\n          width: 96%;\\n          margin: 10px 2%;\\n          padding: 3px;\\n          background-color: #f4f4f4;\\n          border: 1px solid #dcdcdc;\\n          color: #fff;\\n          border-radius: 20px;\\n          text-align: center;\\n        }\\n        .progress-inner {\\n          min-width: 15%;\\n          white-space: nowrap;\\n          overflow: hidden;\\n          padding: 0px;\\n          border-radius: 20px;\\n  \"]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    ProgressBarComponent.ctorParameters = function () { return []; };\r\n    ProgressBarComponent.propDecorators = {\r\n        progress: [{ type: Input, args: ['progress',] }],\r\n        color: [{ type: Input, args: ['color',] }],\r\n        degraded: [{ type: Input, args: ['color-degraded',] }]\r\n    };\r\n    return ProgressBarComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ProgressBarModule = /** @class */ (function () {\r\n    function ProgressBarModule() {\r\n    }\r\n    ProgressBarModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        CommonModule\r\n                    ],\r\n                    declarations: [ProgressBarComponent],\r\n                    exports: [ProgressBarComponent],\r\n                    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n                },] }\r\n    ];\r\n    return ProgressBarModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { ProgressBarComponent, ProgressBarModule };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci1wcm9ncmVzcy1iYXIuanMubWFwIiwic291cmNlcyI6WyJuZzovL2FuZ3VsYXItcHJvZ3Jlc3MtYmFyL2xpYi9hbmd1bGFyLXByb2dyZXNzLWJhci5jb21wb25lbnQudHMiLCJuZzovL2FuZ3VsYXItcHJvZ3Jlc3MtYmFyL2xpYi9hbmd1bGFyLXByb2dyZXNzLWJhci5tb2R1bGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6XHJcbiAgICAgICdwcm9ncmVzcy1iYXInLFxyXG4gIHN0eWxlczogW2BcclxuICAgICAgICAucHJvZ3Jlc3Mtb3V0ZXIge1xyXG4gICAgICAgICAgd2lkdGg6IDk2JTtcclxuICAgICAgICAgIG1hcmdpbjogMTBweCAyJTtcclxuICAgICAgICAgIHBhZGRpbmc6IDNweDtcclxuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmNGY0ZjQ7XHJcbiAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZGNkY2RjO1xyXG4gICAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xyXG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIH1cclxuICAgICAgICAucHJvZ3Jlc3MtaW5uZXIge1xyXG4gICAgICAgICAgbWluLXdpZHRoOiAxNSU7XHJcbiAgICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgIHBhZGRpbmc6IDBweDtcclxuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XHJcbiAgYF0sXHJcbiAgdGVtcGxhdGU6XHJcbiAgYFxyXG4gIDxkaXYgY2xhc3M9XFxcInByb2dyZXNzLW91dGVyXFxcIj5cclxuICAgIDxkaXYgY2xhc3M9XFxcInByb2dyZXNzLWlubmVyXFxcIiBbc3R5bGUud2lkdGhdPVxcXCJ3aGljaFByb2dyZXNzKHByb2dyZXNzKSArICclJ1xcXCIgW3N0eWxlLmJhY2tncm91bmQtY29sb3JdPVxcXCJkZWdyYWRlZCA9PSBudWxsID8gY29sb3IgOiB3aGljaENvbG9yKHByb2dyZXNzKVxcXCI+XHJcbiAgICAgIHt7d2hpY2hQcm9ncmVzcyhwcm9ncmVzcyl9fSVcclxuICAgIDwvZGl2PlxyXG4gIDwvZGl2PlxyXG4gIGBcclxufSlcclxuZXhwb3J0IGNsYXNzIFByb2dyZXNzQmFyQ29tcG9uZW50IHtcclxuXHJcbi8qKiBJbnB1dHMgKiovXHJcbiAgQElucHV0KCdwcm9ncmVzcycpIHByb2dyZXNzOiBzdHJpbmc7XHJcbiAgQElucHV0KCdjb2xvcicpIGNvbG9yOiBzdHJpbmc7XHJcbiAgQElucHV0KCdjb2xvci1kZWdyYWRlZCcpIGRlZ3JhZGVkOiBhbnk7XHJcblxyXG5cclxuY29uc3RydWN0b3IoKSB7XHJcbiAgLy8gRGVmYXVsdCBjb2xvclxyXG4gIHRoaXMuY29sb3IgPSBcIiM0ODhhZmZcIjtcclxufVxyXG5cclxuLyoqXHJcbiAqIFJldHVybnMgYSBjb2xvciBmb3IgYSBjZXJ0YWluIHBlcmNlbnRcclxuICogQHBhcmFtIHBlcmNlbnQgVGhlIGN1cnJlbnQgcHJvZ3Jlc3NcclxuICovXHJcbndoaWNoQ29sb3IocGVyY2VudDogc3RyaW5nKXtcclxuICAvLyBHZXQgYWxsIGVudHJpZXMgaW5kZXggYXMgYW4gYXJyYXlcclxuICBsZXQgazogQXJyYXk8YW55PiA9IE9iamVjdC5rZXlzKHRoaXMuZGVncmFkZWQpO1xyXG4gIC8vIENvbnZlcnQgc3RyaW5nIHRvIG51bWJlclxyXG4gIGsuZm9yRWFjaCgoZSwgaSkgPT4ga1tpXSA9ICtlKTtcclxuICAvLyBTb3J0IHRoZW0gYnkgdmFsdWVcclxuICBrID0gay5zb3J0KChhLCBiKSA9PiBhIC0gYik7XHJcbiAgLy8gUGVyY2VudCBhcyBudW1iZXJcclxuICBsZXQgcCA9ICtwZXJjZW50XHJcbiAgLy8gU2V0IGxhc3QgYnkgZGVmYXVsdCBhcyB0aGUgZmlyc3Qgb2NjdXJyZW5jZVxyXG4gIGxldCBsYXN0ID0ga1swXTtcclxuICAvLyBGb3JlYWNoIGtleXMgXHJcbiAgZm9yKGxldCB2YWwgb2Ygayl7XHJcbiAgICAvLyBpZiBjdXJyZW50IHZhbCBpcyA8IHRoYW4gcGVyY2VudFxyXG4gICAgaWYodmFsIDwgcCl7XHJcbiAgICAgIGxhc3QgPSB2YWw7XHJcbiAgICB9XHJcbiAgICAvLyBpZiB2YWwgPj0gcGVyY2VudCB0aGVuIHRoZSB2YWwgdGhhdCB3ZSBjb3VsZCBzaG93IGhhcyBiZWVuIHJlYWNoZWRcclxuICAgIGVsc2UgaWYodmFsID49IHAgLTEpe1xyXG4gICAgICByZXR1cm4gdGhpcy5kZWdyYWRlZFtsYXN0XTtcclxuICAgIH1cclxuICB9XHJcbiAgLy8gaWYgaXRzIHRoZSBsYXN0IG9uZSByZXR1cm4gdGhlIGxhc3RcclxuICByZXR1cm4gdGhpcy5kZWdyYWRlZFtsYXN0XTtcclxufVxyXG5cclxud2hpY2hQcm9ncmVzcyhwcm9ncmVzczogc3RyaW5nKXtcclxuICB0cnl7XHJcbiAgICByZXR1cm4gTWF0aC5yb3VuZCgrcHJvZ3Jlc3MgKiAxMDApIC8gMTAwO1xyXG4gIH1cclxuICBjYXRjaHtcclxuICAgIHJldHVybiBwcm9ncmVzcztcclxuICB9XHJcbn1cclxufSIsImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFByb2dyZXNzQmFyQ29tcG9uZW50IH0gZnJvbSAnLi9hbmd1bGFyLXByb2dyZXNzLWJhci5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBDVVNUT01fRUxFTUVOVFNfU0NIRU1BIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gXCJAYW5ndWxhci9jb21tb25cIjtcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgaW1wb3J0czogW1xyXG4gICAgQ29tbW9uTW9kdWxlXHJcbiAgXSxcclxuICBkZWNsYXJhdGlvbnM6IFtQcm9ncmVzc0JhckNvbXBvbmVudF0sXHJcbiAgZXhwb3J0czogW1Byb2dyZXNzQmFyQ29tcG9uZW50XSxcclxuICBzY2hlbWFzOiBbQ1VTVE9NX0VMRU1FTlRTX1NDSEVNQV1cclxufSlcclxuZXhwb3J0IGNsYXNzIFByb2dyZXNzQmFyTW9kdWxlIHsgfSJdLCJuYW1lcyI6WyJ0c2xpYl8xLl9fdmFsdWVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7SUF3Q0E7O1FBRUUsSUFBSSxDQUFDLEtBQUssR0FBRyxTQUFTLENBQUM7S0FDeEI7Ozs7Ozs7Ozs7SUFNRCx5Q0FBVTs7Ozs7SUFBVixVQUFXLE9BQWU7Ozs7WUFFcEIsQ0FBQyxHQUFlLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQzs7UUFFOUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFDLENBQUMsRUFBRSxDQUFDLElBQUssT0FBQSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUEsQ0FBQyxDQUFDOztRQUUvQixDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFDLENBQUMsRUFBRSxDQUFDLElBQUssT0FBQSxDQUFDLEdBQUcsQ0FBQyxHQUFBLENBQUMsQ0FBQzs7O1lBRXhCLENBQUMsR0FBRyxDQUFDLE9BQU87Ozs7O1lBRVosSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7OztZQUVmLEtBQWUsSUFBQSxNQUFBQSxTQUFBLENBQUMsQ0FBQSxvQkFBQSxtQ0FBQztnQkFBYixJQUFJLEdBQUcsY0FBQTs7Z0JBRVQsSUFBRyxHQUFHLEdBQUcsQ0FBQyxFQUFDO29CQUNULElBQUksR0FBRyxHQUFHLENBQUM7aUJBQ1o7O3FCQUVJLElBQUcsR0FBRyxJQUFJLENBQUMsR0FBRSxDQUFDLEVBQUM7b0JBQ2xCLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztpQkFDNUI7YUFDRjs7Ozs7Ozs7OztRQUVELE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUM1Qjs7Ozs7SUFFRCw0Q0FBYTs7OztJQUFiLFVBQWMsUUFBZ0I7UUFDNUIsSUFBRztZQUNELE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLFFBQVEsR0FBRyxHQUFHLENBQUMsR0FBRyxHQUFHLENBQUM7U0FDMUM7UUFDRCxXQUFLO1lBQ0gsT0FBTyxRQUFRLENBQUM7U0FDakI7S0FDRjs7Z0JBaEZBLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQ0osY0FBYztvQkFtQmxCLFFBQVEsRUFDUixtUUFNQzs2QkF6QlEsdWNBaUJSO2lCQVNGOzs7OzsyQkFJRSxLQUFLLFNBQUMsVUFBVTt3QkFDaEIsS0FBSyxTQUFDLE9BQU87MkJBQ2IsS0FBSyxTQUFDLGdCQUFnQjs7SUE4Q3pCLDJCQUFDO0NBakZEOzs7Ozs7QUNGQTtJQUtBO0tBUWtDOztnQkFSakMsUUFBUSxTQUFDO29CQUNSLE9BQU8sRUFBRTt3QkFDUCxZQUFZO3FCQUNiO29CQUNELFlBQVksRUFBRSxDQUFDLG9CQUFvQixDQUFDO29CQUNwQyxPQUFPLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQztvQkFDL0IsT0FBTyxFQUFFLENBQUMsc0JBQXNCLENBQUM7aUJBQ2xDOztJQUNnQyx3QkFBQztDQVJsQzs7Ozs7Ozs7Ozs7Ozs7In0=","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\nimport { XwingModule } from '../components/xwing.module';\nimport { ProgressBarModule } from 'angular-progress-bar';\nimport { MainPage } from './main.page';\nimport { HttpProvider } from '../providers/http.provider';\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    XwingModule,\n    ProgressBarModule,\n  ],\n  declarations: [MainPage],\n  providers: [HttpProvider]\n})\nexport class MainPageModule {}\n","module.exports = \"<ion-header *ngIf=\\\"!dataService.initialized\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button *ngIf=\\\"retry_button\\\" [disabled]=\\\"retry_button_disabled\\\" (click)=\\\"retryManifest()\\\">Retry Download</ion-button>\\n      <ion-button *ngIf=\\\"data_button\\\" [disabled]=\\\"data_button_disabled\\\" (click)=\\\"downloadData()\\\">Download Data</ion-button>\\n      <ion-button *ngIf=\\\"image_button\\\" [disabled]=\\\"image_button_disabled\\\" (click)=\\\"downloadArtwork()\\\">Download Artwork</ion-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"title-bar\\\">{{ data_message }}</ion-title>\\n    <div class=\\\"progress-bar-container\\\">\\n      <progress-bar \\n        [progress]=\\\"data_progress\\\" \\n        [color]=\\\"'#488aff'\\\">\\n      </progress-bar>\\n    </div>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content padding>\\n  <div class=\\\"squadron-container\\\">\\n    <div class=\\\"squadron-header\\\"></div>\\n    <div [class]=\\\"squadronCss()\\\" *ngFor=\\\"let squadron of squadrons\\\">\\n      <div class=\\\"squadron-header\\\">\\n        <ion-toolbar>\\n          <span class=\\\"squadron-name\\\">\\n            <xwing-icon [name]=\\\"squadron.faction\\\"></xwing-icon>&nbsp;\\n            {{ squadron.name }} ( {{ squadron.pointsDestroyed }} / {{ squadron.points}} )\\n          </span>\\n          <ion-buttons slot=\\\"end\\\">\\n            <ion-button (click)=\\\"askRechargeRecurring()\\\">\\n              Recover&nbsp;<xwing-icon [name]=\\\"'charge'\\\"></xwing-icon><xwing-icon [name]=\\\"'recurring'\\\"></xwing-icon>\\n            </ion-button>\\n            <ion-button (click)=\\\"presentDamageDeckActionsPopover($event, squadron)\\\" class=\\\"damage-deck-button\\\">\\n              <span class=\\\"damage-deck-summary\\\">\\n                <xwing-icon [name]=\\\"'hit'\\\" class=\\\"damage-deck-icon\\\"></xwing-icon>\\n                <span class=\\\"damage-deck-summary-text\\\">{{ squadron.damagedeck.length}}</span>\\n              </span>\\n            </ion-button>\\n            <ion-button (click)=\\\"removeSquadron(squadron)\\\">\\n              <ion-icon name=\\\"close\\\"></ion-icon>\\n            </ion-button>\\n          </ion-buttons>\\n        </ion-toolbar>\\n      </div>\\n      <xws-pilot \\n        *ngFor=\\\"let pilot of squadron.pilots\\\" \\n        [pilot]=\\\"pilot\\\" \\n        [faction]=\\\"squadron.faction\\\"\\n        [squadron]=\\\"squadron\\\"\\n        [class]=\\\"pilotCss()\\\"></xws-pilot>\\n    </div>\\n  </div>\\n  <ion-fab *ngIf=\\\"dataService.initialized\\\" vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button>\\n      <ion-icon name=\\\"more\\\"></ion-icon>\\n    </ion-fab-button>\\n    <ion-fab-list side=\\\"top\\\">\\n      <ion-fab-button (click)=\\\"resetData()\\\">\\n        <ion-icon name=\\\"nuclear\\\"></ion-icon>\\n      </ion-fab-button>\\n      <ion-fab-button *ngIf=\\\"squadrons.length > 0\\\" (click)=\\\"askReset()\\\">\\n        <xwing-icon [name]=\\\"'reload'\\\"></xwing-icon>\\n      </ion-fab-button>\\n      <ion-fab-button *ngIf=\\\"snapshots.length > 1\\\" (click)=\\\"askUndo()\\\">\\n        <ion-icon name=\\\"undo\\\"></ion-icon>\\n      </ion-fab-button>\\n      <ion-fab-button *ngIf=\\\"squadrons.length < 2\\\" (click)=\\\"xwsAddButton()\\\">\\n        <ion-icon name=\\\"add\\\"></ion-icon>\\n      </ion-fab-button>\\n    </ion-fab-list>\\n  </ion-fab>\\n</ion-content>\\n\"","module.exports = \".title-bar {\\n  display: inline-block;\\n  width: 50%; }\\n\\n.progress-bar-container {\\n  display: inline-block;\\n  width: 50%; }\\n\\n.squadron-container {\\n  display: block; }\\n\\n.squadron-item {\\n  display: inline-block; }\\n\\n.squadron-halfwidth {\\n  display: inline-block;\\n  width: 50%;\\n  vertical-align: top; }\\n\\n.squadron-fullwidth {\\n  width: 100%;\\n  vertical-align: top; }\\n\\n.squadron-header {\\n  display: block; }\\n\\n.squadron-name {\\n  display: inline-block;\\n  padding-left: 0.5vw; }\\n\\n.squadron-info {\\n  display: inline-block; }\\n\\n.damage-deck-button {\\n  vertical-align: center; }\\n\\n.damage-deck-summary {\\n  padding-left: 0.5vw;\\n  padding-right: 0.5vw;\\n  padding-top: 0.5vh;\\n  padding-bottom: 0.5vh;\\n  background-color: black;\\n  vertical-align: center; }\\n\\n.damage-deck-summary-text {\\n  line-height: 1.5vh;\\n  color: white;\\n  display: inline-block; }\\n\\n.damage-deck-icon {\\n  display: inline-block;\\n  text-align: center;\\n  font-size: 2vh;\\n  color: red; }\\n\\n.pilotlist {\\n  display: block; }\\n\\n.pilot {\\n  display: inline-block; }\\n\\n.pilot-fullwidth {\\n  display: block;\\n  width: 100%; }\\n\\n.pilot-minwidth {\\n  display: inline-block;\\n  vertical-align: top; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ModalController, PopoverController, LoadingController } from '@ionic/angular';\nimport { XwsModalPage } from '../modals/xws-modal/xws-modal.page';\nimport { Router } from '@angular/router';\nimport { XwingDataService } from '../services/xwing-data.service';\nimport { Platform } from '@ionic/angular';\nimport { Events } from '@ionic/angular';\nimport { AlertController } from '@ionic/angular';\nimport { DamageDeckActionsComponent } from '../popovers/damage-deck-actions/damage-deck-actions.component';\nimport { NgZone } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport { HttpProvider } from '../providers/http.provider';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.page.html',\n  styleUrls: ['./main.page.scss'],\n})\nexport class MainPage implements OnInit {\n\n  snapshots = [ ];\n  squadrons: any = [ ];\n\n  data_progress: number = 0;\n  data_message: string = \"X-Wing Tabled\";\n  retry_button: boolean = false;\n  retry_button_disabled: boolean = false;\n  data_button: boolean = false;\n  data_button_disabled: boolean = false;\n  image_button: boolean = false;\n  image_button_disabled: boolean = false;\n\n  constructor(public modalController: ModalController, \n              public dataService: XwingDataService,\n              public router: Router,\n              public platform: Platform,\n              public popoverController: PopoverController,\n              private events: Events,\n              private alertController: AlertController,\n              private ngZone: NgZone,\n              private toastController: ToastController,\n              private storage: Storage,\n              private http: HttpProvider,\n              private loadingCtrl: LoadingController) { }\n\n  ngOnInit() {\n    this.events.subscribe(\n      this.dataService.topic,\n      (event) => {\n        this.data_event_handler(event);\n      }\n    );\n\n    this.events.subscribe(\n      \"snapshot\",\n      (event) => {\n        this.snapshot();\n      }\n    );\n\n    this.events.subscribe(\n      \"damagedeck\",\n      (event) => {\n        this.shuffleDamageDeck(this.squadrons[0]);\n      }\n    )\n\n  }\n\n  async restoreFromDisk() {\n    await this.storage.ready();\n    let snapshots = await this.storage.get(\"snapshots\");\n    this.ngZone.run(\n      () => {\n        if (snapshots) {\n          this.snapshots = snapshots;\n          let lastSnapshot = JSON.parse(JSON.stringify(this.snapshots[this.snapshots.length - 1]));\n          this.squadrons = lastSnapshot.squadrons;\n          console.log(this.squadrons);\n          this.toastUndo(lastSnapshot.time);\n          if (this.squadrons && this.squadrons.length == 0) {\n            this.presentXwsModal();\n          }\n        } else {\n          this.presentXwsModal();\n        }\n      }\n    )\n  }\n\n  snapshot() {\n    if(this.snapshots.length >= 5) {\n      this.snapshots.shift();\n    }\n    this.snapshots.push({ time: new Date().toISOString(), squadrons: JSON.parse(JSON.stringify(this.squadrons)) } );\n    this.storage.set(\"snapshots\", this.snapshots);\n    console.log(\"snapshot created\", this.snapshots);\n  }\n\n  async data_event_handler(event: any) {\n    this.data_message = event.message;\n    this.data_progress = event.progress;\n    if (event.status == \"manifest_incomplete\") {\n      this.data_button = true;\n      this.data_message = \"X-Wing Tabled requires a local data update\";\n    }\n    if (event.status == \"data_download_errors\") {\n      this.data_button = true;\n      this.data_message = \"Some X-Wing data could not be downloaded\";\n    }\n    if (event.status == \"no_data_no_connection\") {\n      this.retry_button = true;\n      this.retry_button_disabled = false;\n      const alert = await this.alertController.create({\n        header: 'Internet Connection Required',\n        message: 'An Internet connection is required to update or download necessary data files the first time X-Wing Tabled runs.',\n        buttons: [\n          { text: 'Retry',\n            handler: () => { \n              this.ngZone.run(\n                async () => {\n                  await this.alertController.dismiss();\n                  this.retryDownload();\n                }\n              )\n            }\n          },\n        ]\n      });\n      return await alert.present();\n    }\n    if (event.status == \"loading_images\") {\n      // Disable screen interactions with LoadingController\n      const loading = await this.loadingCtrl.create({\n        message: \"Loading artwork\"\n      });\n      await loading.present();\n      // Once the loading screen is present, signal XwingDataService that\n      // the controller is present. It will begin image loading sequence.\n      this.events.publish(\"mainpage\", { message : \"loading_controller_present\" });\n    }\n    if (event.status == \"loading_images_complete\") {\n      try {\n        await this.loadingCtrl.dismiss();\n      } catch (err) {\n\n      }\n    }\n    if (event.status == \"manifest_current\" || event.status == \"data_download_complete\") {\n      this.data_button = false;\n    }\n    if (event.status == \"images_missing\") {\n      this.data_message = \"X-Wing Tabled needs to download some artwork\";\n      this.image_button = true;\n    }\n    if (event.status == \"images_complete\") {\n      this.image_button = false;\n      this.restoreFromDisk();\n    }\n    if (event.status == \"image_download_incomplete\") {\n      this.image_button = true;\n    }\n    if (event.status == \"image_download_complete\") {\n      this.restoreFromDisk();\n    }\n  }\n\n  retryDownload() {\n    this.retry_button_disabled = true;\n    this.retry_button = false;\n    this.dataService.check_manifest();\n  }\n\n  downloadData() {\n    this.data_button_disabled = true;\n    this.dataService.check_manifest();\n  }\n\n  downloadArtwork() {\n    this.image_button_disabled = true;\n    this.dataService.download_missing_images(this.dataService.data);\n  }\n\n  async presentDamageDeckActionsPopover(ev: any, squadron: any) {\n    const popover = await this.popoverController.create({\n      component: DamageDeckActionsComponent,\n      componentProps: {\n        squadron: squadron\n      },\n      event: ev\n    });\n    return await popover.present();\n  }\n\n  squadronCss() {\n    if (this.platform.isPortrait()) {\n      return 'squadron-fullwidth';\n    }\n    if (this.squadrons.length > 1) { \n      return 'squadron-halfwidth';\n    } else {\n      return 'squadron-fullwidth';\n    }\n  }\n\n  pilotCss() {\n    if (this.platform.isPortrait()) {\n      return 'pilot-fullwidth';\n    } else {\n      return 'pilot-minwidth';\n    }\n  }\n\n  async removeSquadron(squadron: any) {\n    const alert = await this.alertController.create({\n      header: 'Remove squadron?',\n      message: 'You are about to remove ' + squadron.name,\n      buttons: [\n        { text: 'OK',\n          handler: () => {\n            this.ngZone.run(\n              () => {\n                let index = this.squadrons.indexOf(squadron);\n                this.squadrons.splice(index, 1);\n                this.events.publish(\"snapshot\", \"create snapshot\");\n              }\n            )\n          }\n        },\n        { text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary' }\n      ]\n    });\n    return await alert.present();\n  }\n\n  async resetData(squadron: any) {\n    const alert = await this.alertController.create({\n      header: 'Clear data cache?',\n      message: 'You are about to reset your data cache. You may have to re-download some data.',\n      buttons: [\n        { text: 'OK',\n          handler: () => {\n            this.ngZone.run(\n              () => {\n                this.squadrons = [ ];\n                this.snapshots = [ ];\n                this.data_progress = 0;\n                this.data_message = \"X-Wing Tabled\";\n                this.data_button = false;\n                this.data_button_disabled = false;\n                this.image_button = false;\n                this.image_button_disabled = false;\n                this.dataService.reset();\n              }\n            )\n          }\n        },\n        { text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary' }\n      ]\n    });\n    return await alert.present();\n  }\n\n  async askRechargeRecurring() {\n    const alert = await this.alertController.create({\n      header: 'Recharge Recurring',\n      message: 'Do you wish to recover all recurring ' +\n               '<i class=\"xwing-miniatures-font xwing-miniatures-font-charge\"></i> and ' +\n               '<i class=\"xwing-miniatures-font xwing-miniatures-font-forcecharge\"></i>?',\n      buttons: [\n        { text: 'OK',\n          handler: () => { \n            this.ngZone.run(\n              () => {\n                this.rechargeAllRecurring();\n              }\n            )\n          }\n        },\n        { text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary' }\n      ]\n    });\n    return await alert.present();\n  }\n\n  async toastUndo(timestamp: string) {\n    const toast = await this.toastController.create({\n      message: 'Table restored to ' + timestamp,\n      duration: 2000,\n      position: 'bottom'\n    });\n    toast.present();\n  }\n\n  async askUndo() {\n    const alert = await this.alertController.create({\n      header: 'Rewind Time?',\n      message: 'This will rewind time to ' + this.snapshots[this.snapshots.length - 2].time,\n      buttons: [\n        { text: 'OK',\n          handler: () => { \n            this.ngZone.run(\n              () => {\n                this.snapshots.pop();\n                let snapshot = this.snapshots.pop();\n                this.squadrons = snapshot.squadrons;\n                this.events.publish(\"snapshot\", \"create snapshot\");\n                this.toastUndo(snapshot.time);\n              }\n            )\n          }\n        },\n        { text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary' }\n      ]\n    });\n    return await alert.present(); \n  }\n\n  async resetSquadrons() {\n    this.squadrons.forEach(\n      (squadron) => {\n        squadron.pointsDestroyed = 0;\n        squadron.damagediscard = [ ];\n        squadron.damagedeck = this.dataService.getDamageDeck();\n        this.shuffleDamageDeck(squadron);\n        squadron.pilots.forEach(\n          (pilot) => {\n            pilot.damagecards = [ ];\n            pilot.conditions = [ ];\n            pilot.pointsDestroyed = 0;\n            pilot.stats.forEach(\n              (stat) => {\n                stat.remaining = stat.value;\n              }\n            )\n            pilot.upgrades.forEach(\n              (upgrade) => {\n                upgrade.side = 0;\n                if (upgrade.sides[0].charges) {\n                  upgrade.sides[0].charges.remaining = upgrade.sides[0].charges.value;\n                }\n              }\n            )\n          }\n        )\n      }\n    )\n    this.events.publish(\"snapshot\", \"create snapshot\");\n    const toast = await this.toastController.create({\n      message: 'Squadrons reset',\n      duration: 2000,\n      position: 'bottom'\n    });\n    toast.present();\n  }\n\n  async askReset() {\n    const alert = await this.alertController.create({\n      header: 'Reset all squadrons?',\n      message: 'All charges, force and shields will be restored, damage cards shuffled and conditions removed.',\n      buttons: [\n        { text: 'OK',\n          handler: () => { \n            this.ngZone.run(\n              () => {\n                this.resetSquadrons();\n              }\n            )\n          }\n        },\n        { text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary' }\n      ]\n    });\n    return await alert.present(); \n  }\n\n  rechargeAllRecurring() {\n    let recover = (stat) => {\n      stat.remaining += stat.recovers;\n      if (stat.remaining > stat.value) {\n        stat.remaining = stat.value;\n      }\n    }\n    this.squadrons.forEach(\n      (squadron) => {\n        squadron.pilots.forEach(\n          (pilot) => {\n            for (let i = 0; i < pilot.stats.length; i++) {\n              let stat = pilot.stats[i];\n              if (stat.recovers) {\n                recover(stat);\n                pilot.stats.splice(i, 1, JSON.parse(JSON.stringify(stat)));\n              }\n            }\n            pilot.upgrades.forEach(\n              (upgrade) => {\n                let side = upgrade.sides[0];\n                if (side.charges && side.charges.recovers) {\n                  recover(side.charges);\n                  side.charges = JSON.parse(JSON.stringify(side.charges));\n                }\n              }\n            )\n          }\n        )\n      }\n    )\n    this.events.publish(\"snapshot\", \"create snapshot\");\n  }\n\n  async toastNotFound(xws: string, xwsType: string) {\n    const toast = await this.toastController.create({\n      message: \"WARNING: The \" + xwsType + \" \" + xws + \" could not be found. Try nuking your local data and downloading the latest XWS Data.\",\n      duration: 5000,\n      position: 'bottom'\n    });\n    toast.present();\n  }\n\n  injectShipData(pilot: any, faction: string) {\n    // Inject ship data into pilot\n    let xwsShip = pilot.ship;\n    pilot.ship = this.dataService.getShip(faction, pilot.ship);\n    if (pilot.ship != null) {\n      // Inject stats array in pilot root\n      pilot.stats = [ ];\n      pilot.ship.stats.forEach(\n        (stat) => {\n          let statCopy = JSON.parse(JSON.stringify(stat));\n          // Future proofing - in case a chassis ever has baked in recurring charge stats\n          statCopy.remaining = stat.value;\n          if (stat.recovers) {\n            statCopy.numbers = new Array(stat.recovers);\n          }\n          pilot.stats.push(statCopy);\n        }\n      )\n    } else {\n      this.toastNotFound(xwsShip, \"ship\");\n    }\n  }\n\n  injectPilotData(pilot: any, faction: string) {\n    // Get pilot data and insert it into pilot object\n    pilot.pilot = this.dataService.getPilot(faction, pilot.ship.keyname, pilot.id);\n    if (pilot.pilot != null) {\n      // Creates a stat of { type: statType, remaining: 2, numbers: Array() }\n      // for display compatibility\n      let pushStat = (stat, statType) => {\n        let statCopy = JSON.parse(JSON.stringify(stat));\n        statCopy.type = statType;\n        statCopy.remaining = stat.value;\n        statCopy.numbers = Array(stat.numbers);\n        pilot.stats.push(statCopy);\n      }\n      // If the pilot has charges, insert it as a stat\n      if (pilot.pilot.charges) {\n        pushStat(pilot.pilot.charges, 'charges');\n      }\n      // If the pilot has force, insert it as a stat\n      if (pilot.pilot.force) {\n        pushStat(pilot.pilot.force, 'force');\n      }\n\n      pilot.card_text = \"\";\n      if (pilot.pilot.ability) {\n        pilot.card_text += pilot.pilot.ability + \"<br /><br />\";\n      }\n      if (pilot.pilot.text) {\n        pilot.card_text += pilot.pilot.text + \"<br /><br />\";\n      }\n      if (pilot.pilot.shipAbility && pilot.pilot.shipAbility.text) {\n        pilot.card_text += \"<i>\" + pilot.pilot.shipAbility.name + \"</i>: \" +\n                          pilot.pilot.shipAbility.text;\n      }\n\n      // Add additional game state variables\n      pilot.damagecards = []; \n      pilot.conditions = [];\n      pilot.pointsDestroyed = 0;\n    } else {\n      this.toastNotFound(pilot.id, \"pilot\");\n    }\n  }\n\n  mangleUpgradeArray(pilot: any) {\n    // Take xws upgrade list {'astromech': ['r2d2']} and mangle it to\n    // [ { type: 'astromech', name: 'r2d2', etc... } ]\n    let mangledUpgrades = [ ];\n    if (pilot.upgrades) {\n      Object.entries(pilot.upgrades).forEach(\n        ( [upgradeType, upgradeArray ] ) => {\n          if (Array.isArray(upgradeArray)) {\n            upgradeArray.forEach(\n              (upgradeName) => {\n                if (upgradeType == \"force\") {\n                  upgradeType = \"forcepower\";\n                }\n                // Skip hardpoints on T70s for xws exports from raithos.github.io\n                if (upgradeType == \"hardpoint\") {\n                  return;\n                }\n                let upgradeData = this.dataService.getUpgrade(upgradeType, upgradeName);\n                if (upgradeData != null) {\n                  upgradeData['type'] = upgradeType;\n                  mangledUpgrades.push(upgradeData);\n                } else {\n                  this.toastNotFound(upgradeName, \"upgrade\");\n                }\n              }\n            )\n          }\n        }\n      );\n    }\n    pilot.upgrades = mangledUpgrades;\n  }\n\n  injectUpgradeData(pilot: any, upgrade: any) {\n    // Set default \"side\" of upgrade card to side 0\n    upgrade.side = 0;\n\n    // Process each side\n    upgrade.sides.forEach(\n      (side) => {\n        // Mangle charges stats\n        if (side.charges) {\n          side.charges.type = \"charges\"\n          side.charges.remaining = side.charges.value;\n          side.charges.numbers = Array(side.charges.recovers);\n        }\n        // Mangle force stats\n        if (side.force) {\n          side.force.numbers = Array(side.force.recovers);\n          side.force.type = \"force\";\n        } \n        // Mangle attack stats\n        if (side.attack) {\n          side.attack.type = \"attack\";\n          // Displayed icon should be the attack's icon\n          side.attack.icon = side.attack.arc;\n        }\n\n        // If side has granted actions that aren't listed as actions, \n        // inject those\n        if (!side.actions) {\n          side.actions = [ ];\n          if (side.grants) {\n            side.grants.forEach(\n              (grant) => {\n                if (grant['type'] == \"action\") {\n                  side.actions.push(grant.value);\n                }\n              }\n            )\n          }\n        }\n      }\n    )\n  }\n\n  injectShipBonuses(pilot: any) {\n    // Search upgrades for any upgrade that has a 'grant'\n    pilot.upgrades.forEach(\n      (upgrade) => {\n        let side = upgrade.sides[0];\n        if (side.grants) {\n          // Find shield or hull bonuses\n          let grant = side.grants.find((grant) => grant.value == \"shields\" || grant.value == \"hull\");\n          if (grant) {\n            // Find the granted bonus stat on the pilot and add it\n            let stat = pilot.stats.find((element) => element.type == grant.value);\n            stat.value += grant.amount;\n            stat.remaining = stat.value; \n          }\n        }\n      }\n    )\n  }\n\n  injectForceBonuses(pilot: any) {\n    // Add any force bonuses to the pilot, creating a force stat if necessary\n    pilot.upgrades.forEach(\n      (upgrade) => {\n        let side = upgrade.sides[0];\n        // Find upgrades that have a force bonus\n        if (side.force) {\n          // Get the pilot's force stat\n          let forceStat = pilot.stats.find((element) => element.type == 'force');\n          // If no force stat exists, create one\n          if (!forceStat) {\n            forceStat = { value: 0, recovers: 0, type: 'force', numbers: [] };\n            pilot.stats.push(forceStat);\n          }\n          // Add force bonuses\n          forceStat.value += side.force.value;\n          forceStat.recovers += side.force.recovers;\n          forceStat.numbers = Array(forceStat.recovers);\n          forceStat.remaining = forceStat.value;\n        }\n      }\n    )\n  }\n\n  calculatePoints(pilot: any) {\n    let pilotCost = pilot.pilot.cost;\n    let upgradeCost = 0;\n    pilot.upgrades.forEach(\n      (upgrade) => {\n        if (upgrade.cost) {\n          if (\"value\" in upgrade.cost) {\n            upgradeCost += upgrade.cost.value;\n          }\n          if (\"variable\" in upgrade.cost) {\n            let statValue = \"\";\n            if (upgrade.cost.variable == \"size\") {\n              statValue = pilot.ship.size;\n            } else {\n              statValue = pilot.stats.find((stat) => stat.type == upgrade.cost.variable).value;\n            }\n            upgradeCost += upgrade.cost.values[statValue];\n          }\n        }\n      }\n    );\n    pilot.points = pilotCost + upgradeCost;\n  }\n\n  async shuffleDamageDeck(squadron: any) {\n    let newDeck = [ ];\n    while (squadron.damagedeck.length > 0) {\n      let index = Math.floor(Math.random() * Math.floor(squadron.damagedeck.length));\n      let card = squadron.damagedeck[index];\n      squadron.damagedeck.splice(index, 1);\n      newDeck.push(card);\n    }\n    squadron.damagedeck = newDeck;\n    const toast = await this.toastController.create({\n      message: 'Damage Deck Shuffled',\n      duration: 2000,\n      position: 'top'\n    });\n    toast.present();\n    this.events.publish(\"snapshot\", \"Shuffled Damage Deck\");\n  }\n\n  xwsAddButton() {\n    this.presentXwsModal();\n  }\n\n  async processFFG(uuid: string) {\n    let url = \"https://squadbuilder.fantasyflightgames.com/api/squads/\" + uuid + \"/\";\n    \n    this.http.get(url).subscribe(\n      (data) => {\n\n        let cost = data.cost;\n        let name = data.name;\n        let faction = data.faction.name;\n        let pilots = [ ];\n        data.deck.forEach(\n          (pilot) => {\n            let xwsPilot = this.dataService.getXwsFromFFG(pilot.pilot_card.id);\n            xwsPilot.points = pilot.cost;\n            let upgrades = { };\n            pilot.slots.forEach(\n              (upgrade) => {\n                let upgradeData = this.dataService.getXwsFromFFG(upgrade.id);\n                if (upgrades[upgradeData.type] == undefined) {\n                  upgrades[upgradeData.type] = [ ];\n                }\n                upgrades[upgradeData.type].push(upgradeData.xws);\n              }\n            )\n            xwsPilot.upgrades = upgrades;\n            pilots.push(xwsPilot);\n          }\n        );\n        let squadron = {\n          description: data.description,\n          faction: data.faction.name.replace(/ /g, '').toLowerCase(),\n          name: data.name,\n          points: data.cost,\n          pilots: pilots\n        }\n        console.log(\"FFG SquadBuilder response\", data);\n        console.log(\"FFG -> XWS\", squadron);\n        this.processXws(squadron);\n      },\n      (error) => {\n        console.log(\"Unable to get FFG SquadBuilder data\", error);\n      }\n    )\n  }\n\n  async processYasb(data: any) {\n    let pilots = [ ];\n    data.pilots.forEach(\n      (pilot) => {\n        let yasbPilot = this.dataService.getYasbPilot(pilot.id);\n        let xwsPilot = { id: yasbPilot.xws, ship: yasbPilot.ship, upgrades: { } };\n        let upgrades = { };\n        pilot.upgrades.forEach(\n          (upgrade) => {\n            let hardpointRegex = /\\d{3}(\\:U\\.\\-?\\d+)/g\n            let hardpoints = upgrade.match(hardpointRegex);\n            let upgradeNum = -1;\n            if (hardpoints && hardpoints[0]) {\n              upgradeNum = parseInt(hardpoints[0].split('.')[1]);\n            } else {\n              upgradeNum = parseInt(upgrade);\n            }\n            if (upgradeNum == -1) {\n              return;\n            }\n            let yasbUpgrade = this.dataService.getYasbUpgrade(upgradeNum);\n            if (upgrades[yasbUpgrade.slot] == undefined) {\n              upgrades[yasbUpgrade.slot] = [ ];\n            }\n            upgrades[yasbUpgrade.slot].push(yasbUpgrade.xws);\n          }\n        )\n        xwsPilot.upgrades = upgrades;\n        pilots.push(xwsPilot);\n      }\n    )\n    let squadron = {\n      name: data.name,\n      faction: data.faction,\n      pilots: pilots\n    };\n    console.log(\"YASB squadron\", squadron);\n    return await this.processXws(squadron);\n  }\n\n  async processXws(squadron: any) {\n    this.ngZone.run(\n      () => {\n        let squadPoints = 0;\n        squadron.damagediscard = [ ];\n        squadron.damagedeck = this.dataService.getDamageDeck();\n        squadron.pilots.forEach(\n          (pilot) => {\n            this.injectShipData(pilot, squadron.faction);\n            this.injectPilotData(pilot, squadron.faction);\n            this.mangleUpgradeArray(pilot);\n        \n            // Process each upgrade card\n            pilot.upgrades.forEach(\n              (upgrade) => {\n                this.injectUpgradeData(pilot, upgrade);\n              }\n            );\n\n            this.calculatePoints(pilot);\n            squadPoints += pilot.points;\n\n            this.injectShipBonuses(pilot);\n            this.injectForceBonuses(pilot);\n          }\n        )\n        squadron.points = squadPoints;\n        squadron.pointsDestroyed = 0;\n        this.shuffleDamageDeck(squadron);\n        console.log(\"xws loaded and data injected\", squadron);\n        this.squadrons = [ squadron ];\n        this.events.publish(\"snapshot\", \"Squadron \" + squadron.name + \" added\");\n      }\n    )\n    const toast = await this.toastController.create({\n      message: 'Squadron added, Damage Deck shuffled',\n      duration: 2000,\n      position: 'bottom'\n    });\n    return await toast.present();\n  }\n\n  async presentXwsModal() {\n    const modal = await this.modalController.create({\n      component: XwsModalPage\n    });\n    await modal.present();\n    const { data } = await modal.onWillDismiss();\n    if (!data) return;\n    if (data.ffg) {\n      return this.processFFG(data.ffg);\n    }\n    if (data.yasb) {\n      return this.processYasb(data.yasb);\n    }\n    if (data.xws) {\n      let squadron = data.xws;\n      return this.processXws(squadron);\n    }\n  }\n}\n"],"sourceRoot":""}